@using Microsoft.AspNetCore.Components;
@using Microsoft.AspNetCore.Components.Web;
@using GamesApp.Models;
@using GamesApp.Services;
@using System.Collections;
@using System.Collections.Generic;
@using System.Text.Json;
@inject JsonFileCardService CardService;


<div class="container-fluid text-center">@Message</div>
<div class="container-fluid wrapper deck mb-5">
    @foreach (var card in CardService.GetCards().OrderBy(card => card.Order))
    {
        <div class="memory-card" data-value="@card.Value" data-code="@card.Code" @onclick="e => FlipCard(card)">
            <div class="faces">
                <div class="@RenderFaceCardClasslist(card.Code, card.Visible)"><img src="@card.FrontImage" /></div>
                <div class="face back backon"></div>
            </div>
        </div>
    }

</div>

@code {
    string selectedCardValue;
    List<string> frontImgClasses = new List<string>();
    string Message { get; set; }

    void FlipCard(Card card)
    {
        selectedCardValue = card.Value;
        frontImgClasses.Clear();
        Message = selectedCardValue;

        var selected = CardService.GetCards().First(x => x.Code == card.Code);

        foreach (string cls in selected.Visible)
        {
            frontImgClasses.Add(cls);
        }

        if (frontImgClasses.Contains("hide"))
        {
            frontImgClasses.Remove("hide");
        }
        else
        {
            frontImgClasses.Add("hide");
        }

        CardService.updateVisibilty(selected.Code, frontImgClasses);

        RenderFaceCardClasslist(card.Code, frontImgClasses);
    }

    private string RenderFaceCardClasslist(string code, List<string> list)
    {

        var faceCardClasslist = string.Join(" ", list);

        faceCardClasslist += $" {code}";

        return faceCardClasslist;
    }
}